[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "datasette-mcp-server"
version = "0.4.0"
description = "A Model Context Protocol server for Datasette instances"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
dependencies = [
    "fastmcp>=2.0.0",
    "httpx>=0.27.0",
    "PyYAML>=6.0",
]
keywords = ["mcp", "datasette", "sqlite", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
datasette-mcp-server = "datasette_mcp_server:main"

[project.urls]
Homepage = "https://github.com/yourusername/datasette-mcp-server"
Repository = "https://github.com/yourusername/datasette-mcp-server"
Issues = "https://github.com/yourusername/datasette-mcp-server/issues"

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["E501"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]